프로젝트 사양서 — Prompt Launcher (가칭)
질문만 달라져도 답이 달라진다.
사용자는 선택 몇 번으로, 보편값에서 시작해 자기다운 정밀도로 수렴한다.
우리는 모든 AI 대화의 출발점이 된다.

1. 목표
프롬프트 설계 피로 제거: 복붙/수정/붙여넣기의 반복을 없애고, 즉시 완성된 기본 프롬프트를 제공.

보편값 → 정밀화: 아무것도 선택하지 않아도 좋은 결과. 선택을 더할수록 나다움이 강화.

역할(페르소나) 부여: AI가 누구의 시점으로 답할지 명확히.

미리보기 비교: 기본/보강 프롬프트를 나란히 비교.

1‑클릭 전송: 목적에 맞는 모델 추천 + 해당 서비스 바로 열기(프롬프트 자동 복사).

최소 데이터 저장: 완성 프롬프트 + 짧은 메타만 저장(북마크). 응답은 저장하지 않음.

2. 대상 사용자 & 모드
2.1 사용자 유형 기준
심플 사용자: 기본값으로 시작, 0~2개만 수정. “빠르게 전송”이 핵심.

고급 사용자: 페르소나/톤/질문/형식까지 적극 조정. 재사용(북마크) 비율 높음.

2.2 모드 전환
상단 토글: 심플 | 고급

자동 적응(선택 3개 이상 수정 시 고급 제안)은 2차 단계에서 고려.

3. 핵심 기능
기본값 즉시 완성: 진입하자마자 완성 문장 노출.

선택 하이라이트: 사용자가 바꾼 항목만 색상 강조.

페르소나 추천: 보편적 1안 자동 적용, 목록은 간결, 선택 시 짧은 설명.

질문 제안(필수만): 프롬프트 완성에 직결되는 질문만 1~3개 추천, 체크 반영.

미리보기 비교: 기본 vs 내 선택 반영본 나란히.

전송 + 모델 추천: 목적 맞는 모델 추천, 새 탭 열기 + 자동 복사.

돌아가기: 결과가 마음에 안 들면 직전 선택 단계로 복귀(선택값 유지, 변경부분 하이라이트).

북마크: 프롬프트만 저장/재사용. txt/markdown 내보내기.

4. 사용자 여정
scss
복사
편집
온보딩(3장) 
→ 홈(완성 프롬프트 즉시 노출) 
→ 선택(접힘 영역) 
→ 미리보기(비교) 
→ 전송(모델 추천 + 새 탭 열기 & 복사)
→ 결과 확인 
→ [돌아가기] 또는 [북마크 저장]
5. 온보딩 카피(3장)
공감 — “왜 제대로 묻기 어렵나?”

결과가 애매 → 질문이 애매.

프롬프트는 매번 복사·수정·붙여넣기, 피곤하다.

우리는 질문의 형식을 자동으로 잡아 답까지의 거리를 줄인다.

해결 — “질문만 바꿔도, 답이 달라집니다.”

기본값으로 즉시 완성.

토글·드롭다운으로 정밀화.

미리보기로 변화 확인.

북마크로 재사용.

실행 — “전송하면, 어디에 물을지도 추천합니다.”

ChatGPT / Claude / Cursor / Gemini…

목적 맞는 모델 추천 + 새 탭 + 자동복사.

모든 AI 대화의 시작은 여기서.

CTA: “30초 만에 첫 결과 보기”

6. UI 구조
6.1 상단 – 실시간 프롬프트 미리보기
기본값은 검정 텍스트, 사용자가 변경한 값은 하이라이트.

예)
당신은 <하이라이트>3년차 디자이너</하이라이트>입니다. 자기소개서를 <하이라이트>친근한 톤</하이라이트>으로 작성하세요…

6.2 중단 – 선택 패널(접힘)
섹션: 직무 / 경력 / 어조 / 페르소나 / 핵심 질문

모든 기본값은 ‘아무거나’ 대신 보편적 단어로 직접 표기(예: 직무=마케터, 어조=친근한 톤).

6.3 하단 – 버튼
[미리보기] [전송]

미리보기: 모달. 좌(기본), 우(내 선택). 차이 하이라이트, [수정]/[이대로 전송].

7. 색상 규칙
기본값: #111827

사용자 선택 하이라이트: 배경 #FFF8A1 or #B5E3FF, 텍스트 #111827

변경 이력 강조가 필요한 경우 테두리 #F59E0B(amber) 권장.

8. 데이터 스키마
8.1 템플릿 스키마 (JSON)
json
복사
편집
{
  "id": "intro_001",
  "category": "취업",
  "title": "자기소개서 생성",
  "template": "당신은 {{경력}} {{직무}}입니다. {{지원동기}}를 중심으로 자기소개서를 {{어조}}로 작성해주세요. {{선택질문}}을 반드시 한 단락에 반영해주세요. 당신은 {{페르소나}}입니다.",
  "defaults": {
    "경력": "신입",
    "직무": "마케터",
    "어조": "친근한 톤",
    "지원동기": "브랜드 가치에 대한 공감",
    "페르소나": "대기업의 10년차 인사과장",
    "선택질문": "가장 성장한 경험은 무엇이었는가?"
  },
  "options": {
    "경력": ["신입", "1~3년", "3~5년", "5년 이상", "직접입력"],
    "직무": ["마케터", "디자이너", "기획자", "개발자", "영업", "직접입력"],
    "어조": ["정중한 톤", "친근한 톤", "분석적 톤", "설득적 톤", "서사적 톤", "직접입력"],
    "지원동기": ["브랜드 가치 공감", "문제 해결의 즐거움", "도전정신", "지속가능성에 대한 관심", "직접입력"],
    "페르소나": [
      "대기업의 10년차 인사과장",
      "스타트업 CEO",
      "헤드헌터",
      "자기소개서 컨설턴트",
      "중소기업 대표",
      "직접입력"
    ]
  },
  "questions": [
    {
      "when": { "직무": "디자이너" },
      "ask": "가장 만족했던 디자인 경험은 무엇이었는가?"
    },
    {
      "when": { "지원동기": "도전정신" },
      "ask": "가장 도전적인 프로젝트는 무엇이었고, 무엇을 배웠는가?"
    }
  ],
  "modelHints": {
    "goal": "서사형 자기소개서",
    "primary": "Claude",
    "alternatives": ["ChatGPT", "Gemini"],
    "rationale": "장문 서사, 구조화, 맥락 일관성에 강점"
  },
  "notes": "선택을 하나도 하지 않아도 defaults로 완전 조립."
}
8.2 사용자 세션 상태
json
복사
편집
{
  "templateId": "intro_001",
  "selected": {
    "경력": "3년차",
    "직무": "디자이너",
    "어조": "친근한 톤",
    "지원동기": "도전정신",
    "페르소나": "대기업의 10년차 인사과장"
  },
  "checkedQuestions": [
    "가장 만족했던 디자인 경험은 무엇이었는가?"
  ],
  "finalPrompt": "당신은 도전적인 프로젝트를 즐기는 3년차 디자이너입니다...."
}
8.3 북마크 저장 최소 데이터
json
복사
편집
{
  "id": "bm_2025-07-27_001",
  "title": "자소서-디자이너-3년차-친근",
  "templateId": "intro_001",
  "finalPrompt": "당신은 도전적인 프로젝트를 즐기는 3년차 디자이너입니다....",
  "modelPrimary": "Claude",
  "tags": ["취업", "자기소개서", "디자이너"],
  "createdAt": "2025-07-27T09:00:00+09:00"
}
9. 로직 규칙
9.1 보편값(기본값) 정책
‘아무거나’ 대신 보편 최선값을 바로 텍스트로 표시.

내부적으로는 defaults로 조립, 화면에는 “(기본 추천)” 배지로 표시 가능.

9.2 질문 생성/반영
넓은 질문 금지. 템플릿 완성에 필요한 필수 질문 1~3개만 제안.

체크된 질문은 {{선택질문}} 영역에 문장 그대로 삽입.

9.3 미리보기 차이 강조
기본/보강 두 칼럼. 변경된 토큰만 하이라이트.

문구: “둘 다 좋은 질문입니다. 오른쪽은 당신의 선택을 반영해 더 선명합니다.”

9.4 모델 추천
간단 규칙 예시:

목적/맥락	1순위	대안	근거
서사형/장문 구조	Claude	ChatGPT	장문 구조·맥락 일관성
사실 점검/웹검색	Perplexity	ChatGPT	검색+출처
코드/IDE	Cursor	ChatGPT	코드 편집 및 실행
표/JSON 포맷	ChatGPT	Claude	안정적 형식화
짧고 직설적 요약	ChatGPT	Gemini	압축 요약

초기엔 복사 + 새 탭 열기. API 연동은 2단계.

9.5 돌아가기
이전 상태를 스냅샷으로 유지. 복귀 시 변경된 필드만 하이라이트.

빠른 수정 버튼(예: “톤 더 정중하게”, “사실 검증 강조”).

10. 지표
첫 진입 → 전송까지 시간

미리보기 사용률 / 돌아가기 사용률

기본값만 전송 비율 / 고급 선택 전송 비율

모델 추천 클릭 분포

북마크 재사용률

전송 후 “예상과 달랐나요?” 피드백(예/아니오)

11. 프라이버시/저장 원칙
저장: finalPrompt + 최소 메타.

미저장: 모델 응답, 장문 로그, 업로드 파일.

백업: 북마크를 .txt / .md로 내보내기.

12. 기술 스택 제안
프론트: React + Vite + Tailwind (PWA 지원)

상태: React Query + Zustand(또는 Redux Toolkit)

데이터: 초기 JSON 로컬 → 이후 Firebase/Firestore 또는 Supabase

배포: GitHub Pages(정적) → 필요 시 Cloudflare Pages

환경: Windows + VSCode 기준 문서화

13. 구현 로드맵 (Sprint 초안)
Sprint 1 — MVP (2주)
기본 템플릿 10개 JSON

기본값 완성, 선택 하이라이트

미리보기(비교) 모달

전송: 복사 + 새 탭 열기

북마크 저장/불러오기

Sprint 2 — 정교화 (2주)
페르소나 추천 툴팁

질문 체크 → 프롬프트 삽입

돌아가기(상태 복원, 변경 하이라이트)

심플/고급 모드

Sprint 3 — 추천/개인화 (3주)
모델 추천 로직 강화

사용자 행동 데이터 기반 개인화 default

txt/md 내보내기

PWA 및 모바일 최적화

14. 다음 액션
템플릿 30개를 JSON으로 구조화

(취업 5 / 직무 15 / 취미 10)

기본 화면 와이어프레임

상단 미리보기, 중단 선택(접힘), 하단 버튼.

MVP 코드 골격

템플릿 로드 → 상태 반영 → 미리보기 비교 → 복사/전송.

색상/타이포 고정

하이라이트 컬러, 배지 스타일, 툴팁 톤.

